{"version":3,"sources":["axios.js","request.js","Components/Banner.js","Components/Row.js","Components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRatedMovies","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchAnimationMovies","fetchScienceFictionMovies","fetchFamilyMovies","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","console","log","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","alt","padding","videoId","opts","height","width","playerVars","autoplay","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d86c47.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n// instance.get(\"/movie/top_rated\");\r\n\r\nexport default instance;","const API_KEY = \"01c52602ae8817d2ea09b9bb353339c8\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=123`,\r\n  fetchTopRatedMovies: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  fetchAnimationMovies: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n  fetchScienceFictionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=878`,\r\n    fetchFamilyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10751`,\r\n};\r\nexport default requests;\r\n\r\n// http://files.tmdb.org/p/exports/movie_ids_04_28_2017.json.gz\r\n\r\n// https://api.themoviedb.org/3/movie/76341?api_key=01c52602ae8817d2ea09b9bb353339c8\r\n// https://api.themoviedb.org/3/configuration/timezones?api_key=01c52602ae8817d2ea09b9bb353339c8\r\n\r\n\r\n// https://api.themoviedb.org/3/discover/movie?api_key=01c52602ae8817d2ea09b9bb353339c8&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_watch_monetization_types=flatrate\r\n\r\n// https://api.themoviedb.org/3/genre/movie/list?api_key=01c52602ae8817d2ea09b9bb353339c8&language=en-US\r\n\r\n// https://api.themoviedb.org/3/discover/movie?api_key=01c52602ae8817d2ea09b9bb353339c8&sort_by=popularity.desc\r\n\r\n// https://api.themoviedb.org/3/trending/person/day?api_key=01c52602ae8817d2ea09b9bb353339c8","import React, {useState, useEffect} from 'react'\r\nimport './Banner.css'\r\nimport axios from '../axios'\r\nimport requests from '../request'\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([])\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length)]);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    // console.log(movie)\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n    return (\r\n      <header\r\n        className=\"banner\"\r\n        style={{\r\n          backgroundSize: \"cover\",\r\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n          backgroundPosition: \"center center\",\r\n        }}\r\n      >\r\n        <div className=\"banner__contents\">\r\n          <h1 className=\"banner__title\">\r\n            {movie?.title || movie?.name || movie.original_name}\r\n          </h1>\r\n          <div className=\"banner__buttons\">\r\n            <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                    </ div>\r\n                    <h1 className=\"banner__description\">{truncate((movie?.overview), 150)} </h1>\r\n                </div>\r\n                <div className=\"banner__fadeBottom\" />        \r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Banner\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Row.css';\r\nimport axios from \"../axios\";\r\n\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n    const [movies, setMovies] = useState([]);\r\nconst [ trailerUrl, setTrailerUrl] = useState([])\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            console.log(request)\r\n            setMovies(request?.data.results)\r\n            // console.log(request.data.results);\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay:1,\r\n        },\r\n    }\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.title || movie?.name || movie.original_name )\r\n                .then((url) => {\r\n                    const urlParams = URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get(\"v\"));\r\n                })\r\n                .catch((error) => console.log(error));\r\n        }\r\n    };\r\n    // console.log(movies)\r\n    return (\r\n      <div className=\"row\">\r\n        <h1>{title}</h1>\r\n        <div className=\"row__posters\">\r\n          {movies.map((movie) => (\r\n            <img\r\n              onClick={() => handleClick(movie)}\r\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n              src={`${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div style={{ padding: \"40px\" }}>\r\n          {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n      </div>\r\n      \r\n        \r\n        // <div className=\"row\">\r\n        //     <h2>{title}</h2>\r\n\r\n        //     <div className=\"row__posters\">\r\n        //         {movies.map((movie) => (\r\n        //             <img\r\n        //                 key={movie.id}\r\n        //                 onClick={() => handleClick(movie)}\r\n        //                 className={'row__poster ${isLargeRow && \"row__posterLarge\"}'}\r\n        //                 src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n            \r\n        //         ))}\r\n        //     </div>\r\n\r\n        //     <div>\r\n        //        {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n        //     </div>\r\n        // </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from 'react'\r\nimport'./Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    }, [])\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n                className=\"nav__logo\"\r\n                src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/12c6f684-\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            <img\r\n                className=\"nav__avatar\"\r\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b78a5e68\"\r\n                alt=\"Avatar Logo\"\r\n                />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","\nimport './App.css';\nimport Banner from './Components/Banner';\nimport Row from './Components/Row';\nimport Nav from './Components/Nav';\n\nimport requests from './request';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row\n        title=\"Top Rated\"\n        fetchUrl={requests.fetchTopRatedMovies}\n      />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      <Row title=\"Animation Movies\" fetchUrl={requests.fetchAnimationMovies} />\n      <Row title=\"Scientific Fiction\" fetchUrl={requests.fetchScienceFictionMovies} />\n      <Row title=\"Family Movies\" fetchUrl={requests.fetchFamilyMovies} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}